---
// Material Design 3 Color System Component
// This component provides dynamic color theming capabilities
---

<div id="color-system" class="hidden">
  <!-- Color tokens will be applied via CSS custom properties -->
</div>

<script>
  // Material Design 3 Dynamic Color System
  class ColorSystem {
    constructor() {
      this.currentTheme = 'light';
      this.init();
    }

    init() {
      // Apply initial theme
      this.applyTheme(this.currentTheme);
      
      // Listen for theme changes
      this.setupThemeToggle();
      
      // Listen for system theme changes
      this.setupSystemThemeListener();
    }

    applyTheme(theme) {
      const root = document.documentElement;
      
      if (theme === 'dark') {
        // Dark theme colors
        root.style.setProperty('--md-primary', '#D0BCFF');
        root.style.setProperty('--md-on-primary', '#371E73');
        root.style.setProperty('--md-primary-container', '#4F378B');
        root.style.setProperty('--md-on-primary-container', '#EADDFF');
        
        root.style.setProperty('--md-secondary', '#CCC2DC');
        root.style.setProperty('--md-on-secondary', '#332D41');
        root.style.setProperty('--md-secondary-container', '#4A4458');
        root.style.setProperty('--md-on-secondary-container', '#E8DEF8');
        
        root.style.setProperty('--md-tertiary', '#EFB8C8');
        root.style.setProperty('--md-on-tertiary', '#492532');
        root.style.setProperty('--md-tertiary-container', '#633B48');
        root.style.setProperty('--md-on-tertiary-container', '#FFD8E4');
        
        root.style.setProperty('--md-error', '#F2B8B5');
        root.style.setProperty('--md-on-error', '#601410');
        root.style.setProperty('--md-error-container', '#8C1D18');
        root.style.setProperty('--md-on-error-container', '#F9DEDC');
        
        root.style.setProperty('--md-background', '#10131C');
        root.style.setProperty('--md-on-background', '#E6E0E9');
        root.style.setProperty('--md-surface', '#10131C');
        root.style.setProperty('--md-on-surface', '#E6E0E9');
        
        root.style.setProperty('--md-surface-variant', '#49454F');
        root.style.setProperty('--md-on-surface-variant', '#CAC4D0');
        root.style.setProperty('--md-outline', '#938F99');
        root.style.setProperty('--md-outline-variant', '#49454F');
        
        root.style.setProperty('--md-surface-container-lowest', '#0B0E17');
        root.style.setProperty('--md-surface-container-low', '#1D1B20');
        root.style.setProperty('--md-surface-container', '#211F26');
        root.style.setProperty('--md-surface-container-high', '#2B2930');
        root.style.setProperty('--md-surface-container-highest', '#36343B');
        
        document.body.classList.add('dark');
        document.body.classList.remove('light');
      } else {
        // Light theme colors
        root.style.setProperty('--md-primary', '#6750A4');
        root.style.setProperty('--md-on-primary', '#FFFFFF');
        root.style.setProperty('--md-primary-container', '#EADDFF');
        root.style.setProperty('--md-on-primary-container', '#21005D');
        
        root.style.setProperty('--md-secondary', '#625B71');
        root.style.setProperty('--md-on-secondary', '#FFFFFF');
        root.style.setProperty('--md-secondary-container', '#E8DEF8');
        root.style.setProperty('--md-on-secondary-container', '#1D192B');
        
        root.style.setProperty('--md-tertiary', '#7D5260');
        root.style.setProperty('--md-on-tertiary', '#FFFFFF');
        root.style.setProperty('--md-tertiary-container', '#FFD8E4');
        root.style.setProperty('--md-on-tertiary-container', '#31111D');
        
        root.style.setProperty('--md-error', '#B3261E');
        root.style.setProperty('--md-on-error', '#FFFFFF');
        root.style.setProperty('--md-error-container', '#F9DEDC');
        root.style.setProperty('--md-on-error-container', '#410E0B');
        
        root.style.setProperty('--md-background', '#FFFBFE');
        root.style.setProperty('--md-on-background', '#1C1B1F');
        root.style.setProperty('--md-surface', '#FFFBFE');
        root.style.setProperty('--md-on-surface', '#1C1B1F');
        
        root.style.setProperty('--md-surface-variant', '#E7E0EC');
        root.style.setProperty('--md-on-surface-variant', '#49454F');
        root.style.setProperty('--md-outline', '#79747E');
        root.style.setProperty('--md-outline-variant', '#CAC4D0');
        
        root.style.setProperty('--md-surface-container-lowest', '#FFFFFF');
        root.style.setProperty('--md-surface-container-low', '#F7F2FA');
        root.style.setProperty('--md-surface-container', '#F3EDF7');
        root.style.setProperty('--md-surface-container-high', '#ECE6F0');
        root.style.setProperty('--md-surface-container-highest', '#E6E0E9');
        
        document.body.classList.add('light');
        document.body.classList.remove('dark');
      }
      
      this.currentTheme = theme;
      localStorage.setItem('theme', theme);
    }

    setupThemeToggle() {
      // Create theme toggle button if it doesn't exist
      let themeToggle = document.getElementById('theme-toggle');
      if (!themeToggle) {
        themeToggle = document.createElement('button');
        themeToggle.id = 'theme-toggle';
        themeToggle.className = 'md-btn-text fixed top-4 right-4 z-50 p-2 rounded-full';
        themeToggle.innerHTML = this.currentTheme === 'light' ? '🌙' : '☀️';
        document.body.appendChild(themeToggle);
      }
      
      themeToggle.addEventListener('click', () => {
        const newTheme = this.currentTheme === 'light' ? 'dark' : 'light';
        this.applyTheme(newTheme);
        themeToggle.innerHTML = newTheme === 'light' ? '🌙' : '☀️';
      });
    }

    setupSystemThemeListener() {
      // Check for saved theme preference or default to system preference
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        this.applyTheme(savedTheme);
      } else {
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        this.applyTheme(prefersDark ? 'dark' : 'light');
      }
      
      // Listen for system theme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          this.applyTheme(e.matches ? 'dark' : 'light');
        }
      });
    }
  }

  // Initialize color system when DOM is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      new ColorSystem();
    });
  } else {
    new ColorSystem();
  }
</script>

<style>
  /* Ensure smooth transitions for theme changes */
  :root {
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  * {
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  }
</style>