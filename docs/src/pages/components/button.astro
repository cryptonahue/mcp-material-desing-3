---
import Layout from '../../layouts/Layout.astro';
import CodeBlock from '../../components/CodeBlock.astro';

// Variantes del botón
const variants = [
  {
    name: 'Filled',
    description: 'Botón principal con fondo sólido',
    code: 'filled',
    preview: '<button class="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors font-medium">Filled Button</button>'
  },
  {
    name: 'Outlined',
    description: 'Botón secundario con borde',
    code: 'outlined',
    preview: '<button class="border-2 border-purple-600 text-purple-600 px-6 py-3 rounded-lg hover:bg-purple-50 focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors font-medium">Outlined Button</button>'
  },
  {
    name: 'Text',
    description: 'Botón de texto sin fondo',
    code: 'text',
    preview: '<button class="text-purple-600 px-6 py-3 rounded-lg hover:bg-purple-50 focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors font-medium">Text Button</button>'
  },
  {
    name: 'Elevated',
    description: 'Botón con sombra elevada',
    code: 'elevated',
    preview: '<button class="bg-white text-purple-600 px-6 py-3 rounded-lg shadow-md hover:shadow-lg focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-all font-medium border border-gray-200">Elevated Button</button>'
  }
];

// Tamaños
const sizes = [
  {
    name: 'Small',
    code: 'small',
    preview: '<button class="bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 transition-colors text-sm font-medium">Small</button>'
  },
  {
    name: 'Medium',
    code: 'medium',
    preview: '<button class="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium">Medium</button>'
  },
  {
    name: 'Large',
    code: 'large',
    preview: '<button class="bg-purple-600 text-white px-8 py-4 rounded-lg hover:bg-purple-700 transition-colors text-lg font-medium">Large</button>'
  }
];

// Estados
const states = [
  {
    name: 'Normal',
    preview: '<button class="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium">Normal</button>'
  },
  {
    name: 'Hover',
    preview: '<button class="bg-purple-700 text-white px-6 py-3 rounded-lg transition-colors font-medium">Hover</button>'
  },
  {
    name: 'Focus',
    preview: '<button class="bg-purple-600 text-white px-6 py-3 rounded-lg ring-2 ring-purple-500 ring-offset-2 transition-colors font-medium">Focus</button>'
  },
  {
    name: 'Disabled',
    preview: '<button disabled class="bg-gray-300 text-gray-500 px-6 py-3 rounded-lg cursor-not-allowed font-medium">Disabled</button>'
  }
];

// Iconos
const iconExamples = [
  {
    name: 'Leading Icon',
    preview: '<button class="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium flex items-center gap-2"><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path></svg>Dashboard</button>'
  },
  {
    name: 'Trailing Icon',
    preview: '<button class="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium flex items-center gap-2">Siguiente<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg></button>'
  },
  {
    name: 'Icon Only',
    preview: '<button class="bg-purple-600 text-white p-3 rounded-lg hover:bg-purple-700 transition-colors"><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path></svg></button>'
  }
];
---

<Layout title="Button - Componentes - Material Tailwind MCP">
  <!-- Header -->
  <section class="bg-white border-b border-gray-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="flex items-center gap-3 mb-4">
        <a href="/components" class="text-purple-600 hover:text-purple-700">
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
          </svg>
        </a>
        <span class="text-gray-400">/</span>
        <span class="text-gray-600">Button</span>
      </div>
      
      <div class="flex items-start justify-between">
        <div>
          <h1 class="text-4xl font-bold text-gray-900 mb-4">
            Button
          </h1>
          <p class="text-xl text-gray-600 max-w-3xl">
            Botones Material Design 3 con múltiples variantes, tamaños y estados. Incluye soporte para iconos y accesibilidad completa.
          </p>
        </div>
        
        <div class="flex gap-2">
          <span class="px-3 py-1 bg-green-100 text-green-800 text-sm font-medium rounded-full">
            Estable
          </span>
          <span class="px-3 py-1 bg-blue-100 text-blue-800 text-sm font-medium rounded-full">
            Interactivo
          </span>
        </div>
      </div>
    </div>
  </section>

  <!-- Quick Example -->
  <section class="bg-gray-50 py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-8">
        <div class="grid lg:grid-cols-2 gap-8">
          <!-- Preview -->
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Vista Previa</h3>
            <div class="bg-gray-50 rounded-lg p-6 flex items-center justify-center">
              <button class="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors font-medium">
                Ejemplo de Botón
              </button>
            </div>
          </div>
          
          <!-- Code -->
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Código MCP</h3>
            <CodeBlock 
              code={`await mcp.callTool("generate_component", {
  type: "button",
  variant: "filled",
  props: {
    text: "Ejemplo de Botón",
    size: "medium"
  }
});`}
              language="typescript"
              showCopy={true}
            />
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Variants -->
  <section class="py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8">Variantes</h2>
      
      <div class="grid lg:grid-cols-2 gap-8">
        {variants.map((variant) => (
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div class="flex items-center justify-between mb-4">
              <div>
                <h3 class="text-xl font-semibold text-gray-900">{variant.name}</h3>
                <p class="text-gray-600 text-sm">{variant.description}</p>
              </div>
              <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded font-mono">
                {variant.code}
              </span>
            </div>
            
            <!-- Preview -->
            <div class="bg-gray-50 rounded-lg p-6 mb-4 flex items-center justify-center">
              <div set:html={variant.preview}></div>
            </div>
            
            <!-- Code -->
            <CodeBlock 
              code={`await mcp.callTool("generate_component", {
  type: "button",
  variant: "${variant.code}",
  props: {
    text: "${variant.name} Button"
  }
});`}
              language="typescript"
              showCopy={true}
            />
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Sizes -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8">Tamaños</h2>
      
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-8">
        <div class="grid md:grid-cols-3 gap-8">
          {sizes.map((size) => (
            <div class="text-center">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">{size.name}</h3>
              <div class="bg-gray-50 rounded-lg p-6 mb-4 flex items-center justify-center">
                <div set:html={size.preview}></div>
              </div>
              <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded font-mono">
                {size.code}
              </span>
            </div>
          ))}
        </div>
        
        <div class="mt-8">
          <h4 class="text-lg font-semibold text-gray-900 mb-4">Código de ejemplo:</h4>
          <CodeBlock 
            code={`await mcp.callTool("generate_component", {
  type: "button",
  variant: "filled",
  props: {
    text: "Mi Botón",
    size: "large" // small, medium, large
  }
});`}
            language="typescript"
            showCopy={true}
          />
        </div>
      </div>
    </div>
  </section>

  <!-- States -->
  <section class="py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8">Estados</h2>
      
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-8">
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
          {states.map((state) => (
            <div class="text-center">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">{state.name}</h3>
              <div class="bg-gray-50 rounded-lg p-6 flex items-center justify-center">
                <div set:html={state.preview}></div>
              </div>
            </div>
          ))}
        </div>
        
        <div class="mt-8">
          <h4 class="text-lg font-semibold text-gray-900 mb-4">Estados automáticos:</h4>
          <p class="text-gray-600 mb-4">
            Los botones generados incluyen automáticamente estilos para hover, focus, active y disabled.
          </p>
          <CodeBlock 
            code={`await mcp.callTool("generate_component", {
  type: "button",
  variant: "filled",
  props: {
    text: "Mi Botón",
    disabled: true // Para estado deshabilitado
  }
});`}
            language="typescript"
            showCopy={true}
          />
        </div>
      </div>
    </div>
  </section>

  <!-- Icons -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8">Botones con Iconos</h2>
      
      <div class="grid lg:grid-cols-3 gap-8">
        {iconExamples.map((example) => (
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">{example.name}</h3>
            <div class="bg-gray-50 rounded-lg p-6 mb-4 flex items-center justify-center">
              <div set:html={example.preview}></div>
            </div>
          </div>
        ))}
      </div>
      
      <div class="mt-8 bg-white rounded-xl shadow-sm border border-gray-200 p-8">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Código con iconos:</h3>
        <CodeBlock 
          code={`// Botón con icono al inicio
await mcp.callTool("generate_component", {
  type: "button",
  variant: "filled",
  props: {
    text: "Dashboard",
    icon: "leading",
    iconName: "dashboard" // Usa iconos Material
  }
});

// Botón con icono al final
await mcp.callTool("generate_component", {
  type: "button",
  variant: "filled",
  props: {
    text: "Siguiente",
    icon: "trailing",
    iconName: "arrow_forward"
  }
});

// Botón solo con icono
await mcp.callTool("generate_component", {
  type: "button",
  variant: "filled",
  props: {
    icon: "only",
    iconName: "add",
    ariaLabel: "Agregar elemento"
  }
});`}
          language="typescript"
          showCopy={true}
        />
      </div>
    </div>
  </section>

  <!-- Props Reference -->
  <section class="py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8">Referencia de Props</h2>
      
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Prop</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tipo</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Default</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Descripción</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">text</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">string</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">"Button"</td>
                <td class="px-6 py-4 text-sm text-gray-900">Texto del botón</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">variant</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">string</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">"filled"</td>
                <td class="px-6 py-4 text-sm text-gray-900">Variante del botón: filled, outlined, text, elevated</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">size</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">string</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">"medium"</td>
                <td class="px-6 py-4 text-sm text-gray-900">Tamaño: small, medium, large</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">icon</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">string</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">null</td>
                <td class="px-6 py-4 text-sm text-gray-900">Posición del icono: leading, trailing, only</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">iconName</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">string</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">null</td>
                <td class="px-6 py-4 text-sm text-gray-900">Nombre del icono Material Design</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">disabled</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">boolean</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">false</td>
                <td class="px-6 py-4 text-sm text-gray-900">Deshabilitar el botón</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">fullWidth</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">boolean</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">false</td>
                <td class="px-6 py-4 text-sm text-gray-900">Botón de ancho completo</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">ariaLabel</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">string</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">null</td>
                <td class="px-6 py-4 text-sm text-gray-900">Etiqueta de accesibilidad</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </section>

  <!-- Best Practices -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8">Mejores Prácticas</h2>
      
      <div class="grid md:grid-cols-2 gap-8">
        <!-- Do's -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
              <svg class="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-green-800">Recomendado</h3>
          </div>
          <ul class="space-y-3 text-sm text-gray-700">
            <li class="flex items-start gap-2">
              <span class="text-green-600 mt-1">•</span>
              Usa botones "filled" para acciones principales
            </li>
            <li class="flex items-start gap-2">
              <span class="text-green-600 mt-1">•</span>
              Incluye iconos descriptivos cuando sea apropiado
            </li>
            <li class="flex items-start gap-2">
              <span class="text-green-600 mt-1">•</span>
              Proporciona etiquetas aria-label para botones de solo icono
            </li>
            <li class="flex items-start gap-2">
              <span class="text-green-600 mt-1">•</span>
              Mantén textos de botón concisos y claros
            </li>
            <li class="flex items-start gap-2">
              <span class="text-green-600 mt-1">•</span>
              Usa estados disabled para acciones no disponibles
            </li>
          </ul>
        </div>
        
        <!-- Don'ts -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
              <svg class="w-5 h-5 text-red-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-red-800">Evitar</h3>
          </div>
          <ul class="space-y-3 text-sm text-gray-700">
            <li class="flex items-start gap-2">
              <span class="text-red-600 mt-1">•</span>
              No uses múltiples botones "filled" en la misma vista
            </li>
            <li class="flex items-start gap-2">
              <span class="text-red-600 mt-1">•</span>
              Evita textos muy largos en botones
            </li>
            <li class="flex items-start gap-2">
              <span class="text-red-600 mt-1">•</span>
              No mezcles diferentes tamaños sin propósito
            </li>
            <li class="flex items-start gap-2">
              <span class="text-red-600 mt-1">•</span>
              No uses iconos decorativos sin significado
            </li>
            <li class="flex items-start gap-2">
              <span class="text-red-600 mt-1">•</span>
              Evita botones sin estados de hover/focus
            </li>
          </ul>
        </div>
      </div>
    </div>
  </section>
</Layout>